/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TasksRouteImport } from './routes/tasks/route'
import { Route as EpicsRouteImport } from './routes/epics/route'
import { Route as IndexImport } from './routes/index'
import { Route as TasksIndexImport } from './routes/tasks/index'
import { Route as EpicsIndexImport } from './routes/epics/index'
import { Route as TasksEditTaskidImport } from './routes/tasks/edit.$taskid'
import { Route as EpicsEditEdpicIdImport } from './routes/epics/edit.$edpicId'

// Create/Update Routes

const TasksRouteRoute = TasksRouteImport.update({
  path: '/tasks',
  getParentRoute: () => rootRoute,
} as any)

const EpicsRouteRoute = EpicsRouteImport.update({
  path: '/epics',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TasksIndexRoute = TasksIndexImport.update({
  path: '/',
  getParentRoute: () => TasksRouteRoute,
} as any)

const EpicsIndexRoute = EpicsIndexImport.update({
  path: '/',
  getParentRoute: () => EpicsRouteRoute,
} as any)

const TasksEditTaskidRoute = TasksEditTaskidImport.update({
  path: '/edit/$taskid',
  getParentRoute: () => TasksRouteRoute,
} as any)

const EpicsEditEdpicIdRoute = EpicsEditEdpicIdImport.update({
  path: '/edit/$edpicId',
  getParentRoute: () => EpicsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/epics': {
      id: '/epics'
      path: '/epics'
      fullPath: '/epics'
      preLoaderRoute: typeof EpicsRouteImport
      parentRoute: typeof rootRoute
    }
    '/tasks': {
      id: '/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksRouteImport
      parentRoute: typeof rootRoute
    }
    '/epics/': {
      id: '/epics/'
      path: '/'
      fullPath: '/epics/'
      preLoaderRoute: typeof EpicsIndexImport
      parentRoute: typeof EpicsRouteImport
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/'
      fullPath: '/tasks/'
      preLoaderRoute: typeof TasksIndexImport
      parentRoute: typeof TasksRouteImport
    }
    '/epics/edit/$edpicId': {
      id: '/epics/edit/$edpicId'
      path: '/edit/$edpicId'
      fullPath: '/epics/edit/$edpicId'
      preLoaderRoute: typeof EpicsEditEdpicIdImport
      parentRoute: typeof EpicsRouteImport
    }
    '/tasks/edit/$taskid': {
      id: '/tasks/edit/$taskid'
      path: '/edit/$taskid'
      fullPath: '/tasks/edit/$taskid'
      preLoaderRoute: typeof TasksEditTaskidImport
      parentRoute: typeof TasksRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  EpicsRouteRoute: EpicsRouteRoute.addChildren({
    EpicsIndexRoute,
    EpicsEditEdpicIdRoute,
  }),
  TasksRouteRoute: TasksRouteRoute.addChildren({
    TasksIndexRoute,
    TasksEditTaskidRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/epics",
        "/tasks"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/epics": {
      "filePath": "epics/route.tsx",
      "children": [
        "/epics/",
        "/epics/edit/$edpicId"
      ]
    },
    "/tasks": {
      "filePath": "tasks/route.tsx",
      "children": [
        "/tasks/",
        "/tasks/edit/$taskid"
      ]
    },
    "/epics/": {
      "filePath": "epics/index.tsx",
      "parent": "/epics"
    },
    "/tasks/": {
      "filePath": "tasks/index.tsx",
      "parent": "/tasks"
    },
    "/epics/edit/$edpicId": {
      "filePath": "epics/edit.$edpicId.tsx",
      "parent": "/epics"
    },
    "/tasks/edit/$taskid": {
      "filePath": "tasks/edit.$taskid.tsx",
      "parent": "/tasks"
    }
  }
}
ROUTE_MANIFEST_END */
